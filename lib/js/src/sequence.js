// Generated by BUCKLESCRIPT VERSION 1.8.3, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function forEach(f, _seq) {
  while(true) {
    var seq = _seq;
    var match = Curry._1(seq, /* () */0);
    if (match) {
      Curry._1(f, match[0]);
      _seq = match[1];
      continue ;
      
    } else {
      return /* () */0;
    }
  };
}

function map(f, seq) {
  var match = Curry._1(seq, /* () */0);
  if (match) {
    var next = match[1];
    var element = match[0];
    return (function () {
        return /* Cons */[
                Curry._1(f, element),
                map(f, next)
              ];
      });
  } else {
    return (function () {
        return /* Nil */0;
      });
  }
}

function count(seq) {
  var n = [0];
  forEach((function () {
          n[0] = n[0] + 1 | 0;
          return /* () */0;
        }), seq);
  return n[0];
}

exports.forEach = forEach;
exports.map     = map;
exports.count   = count;
/* No side effect */
